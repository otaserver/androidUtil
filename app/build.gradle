apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

def gitCommitShortHash = 'git log -1 --pretty=%h'.execute([], project.rootDir).text.trim()
def gitCommitDate = 'git log -1 --pretty=%ci'.execute([], project.rootDir).text.trim().split()[0]
// Auto-incrementing commit count based on counting commits to HEAD (Build #543)
def gitCommitCount = Integer.parseInt('git rev-list HEAD --count'.execute([], project.rootDir).text.trim())
// 使用git tags 作为版本名称，需要在当前分支下有tag标签，此命令会获取最后一个tag的名称。
def gitCurrentTag = 'git describe --tags --abbrev=0'.execute([], project.rootDir).text.trim()

println "gitCommitDate==========" + gitCommitDate
println "gitCommitShortHash==========" + gitCommitShortHash
println "gitCommitCount===========" + gitCommitCount
println "gitCurrentTag============" + gitCurrentTag

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        // 从mvnrepository查2020.07查0.9.2在jcenter是最新包
        classpath 'com.novoda:bintray-release:0.9.2'
    }
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode gitCommitCount
        versionName gitCurrentTag
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        disable('AllowBackup', 'GoogleAppIndexingWarning', 'MissingApplicationIcon')
    }
    // 输出版本名到 build 目录下的 version_name.txt 文件，不注释执行bintray会失败。
    // applicationVariants.all { variant ->
    //     project.tasks["assemble${variant.name.capitalize()}"].doLast {
    //         new File(project.buildDir, "version_name.txt").withWriter('utf-8') {
    //             it.write(gitCurrentTag + "(" + gitCommitDate + "_" + gitCommitShortHash + ")")
    //         }
    //     }
    // }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.test:core:1.2.0'

    //Gson序列号对象
    implementation 'com.google.code.gson:gson:2.8.6'
    // 注册lombok，减少无谓的set,get代码
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
    // 必须加上，不然编译都不通过。因为是android项目，发布时不需要打包lombok。
    compileOnly 'org.projectlombok:lombok:1.18.16'
}

//自己打包jar的task方法
task makeReleaseJar(type: Jar, dependsOn: ['assembleRelease']) {
//    archiveName = "com.otaserver.androidUtil.${VERSION}.jar"
//    archiveName已经过时，推荐使用archivesBaseName。
//    具体细节查看gradle文档：https://docs.gradle.org/current/dsl/org.gradle.api.tasks.bundling.Jar.html#org.gradle.api.tasks.bundling.Jar:archiveName
//    archivesBaseName = "com.otaserver.androidUtil.${VERSION}"//这种写法可以不用加后缀jar。
    archivesBaseName = "com.otaserver.androidUtil.${gitCurrentTag}"//这种写法可以不用加后缀jar。
    from('build/intermediates/javac/release/classes')
//    destinationDir = file('build/libs')
//    没有找到destinationDir替代方法的例子。但是可以省略。
}


//给bintray发布使用,暂时未使用。目前用命令行代替。
publish {
    userOrg = "otaserver"   //用户名
    repoName = 'sdk'        // repo远程仓库名字，不指明，默认上传到maven。在bintray有repo库的设置，最好一致。
    groupId = 'otaserver.opensdk'    //jcenter上的路径，建议使用github上用户名或者域名.会在maven-metadata.xml中体现。
    artifactId = 'AndroidUtil'       //会在maven-metadata.xml中体现。
    publishVersion = gitCurrentTag
    desc = 'some utility for android development.'   //工具上传可能会有乱码
    website = 'https://github.com/otaserver/androidUtil'
}

tasks.withType(Javadoc) {//防止编码问题
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

//引用包格式为：
//dependencies {
//    implementation 'otaserver.opensdk:AndroidUtil:0.0.5'
//}