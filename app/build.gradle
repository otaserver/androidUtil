apply plugin: 'com.android.application'

def gitCommitShortHash = 'git log -1 --pretty=%h'.execute([], project.rootDir).text.trim()
def gitCommitDate = 'git log -1 --pretty=%ci'.execute([], project.rootDir).text.trim().split()[0]

// Auto-incrementing commit count based on counting commits to HEAD (Build #543)
def gitCommitCount = Integer.parseInt('git rev-list HEAD --count'.execute([], project.rootDir).text.trim())

// 使用git tags 作为版本名称，需要在当前分支下有tag标签，此命令会获取最后一个tag的名称。
def gitCurrentTag = 'git describe --tags --abbrev=0'.execute([], project.rootDir).text.trim()

println "gitCommitDate==========" + gitCommitDate
println "gitCommitShortHash==========" + gitCommitShortHash
println "gitCommitCount===========" + gitCommitCount
println "gitCurrentTag============" + gitCurrentTag

android {
    compileSdkVersion "$COMPILE_SDK_VERSION"
    defaultConfig {
        applicationId "com.otaserver.android.util"
        minSdkVersion "$MIN_SDK_VERSION"
        targetSdkVersion "$TARGET_SDK_VERSION"
        versionCode gitCommitCount
        versionName gitCurrentTag
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        disable('AllowBackup', 'GoogleAppIndexingWarning', 'MissingApplicationIcon')
    }
    // 输出版本名到 build 目录下的 version_name.txt 文件
    applicationVariants.all { variant ->
        project.tasks["assemble${variant.name.capitalize()}"].doLast {
            new File(project.buildDir, "version_name.txt").withWriter('utf-8') {
                it.write(gitCurrentTag + "(" + gitCommitDate + "_" + gitCommitShortHash + ")")
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
//    androidTestImplementation 'androidx.test:core:1.2.0'

    //Gson序列号对象
    implementation 'com.google.code.gson:gson:2.8.6'
}

//
task makeReleaseJar(type: Jar, dependsOn: ['assembleRelease']) {
//    archiveName = "com.otaserver.androidUtil.${VERSION}.jar"
//    archiveName已经过时，推荐使用archivesBaseName。
//    具体细节查看gradle文档：https://docs.gradle.org/current/dsl/org.gradle.api.tasks.bundling.Jar.html#org.gradle.api.tasks.bundling.Jar:archiveName
//    archivesBaseName = "com.otaserver.androidUtil.${VERSION}"//这种写法可以不用加后缀jar。
    archivesBaseName = "com.otaserver.androidUtil.${gitCurrentTag}"//这种写法可以不用加后缀jar。
    from('build/intermediates/javac/release/classes')
//    destinationDir = file('build/libs')
//    没有找到destinationDir替代方法的例子。但是可以省略。
}

